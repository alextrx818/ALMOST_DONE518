--- orchestrate_complete.py.orig
+++ orchestrate_complete.py
@@ -26,6 +27,7 @@
 import itertools
 import traceback
 import json
+import pytz
 from operator import itemgetter
 from pathlib import Path
 
@@ -54,6 +56,11 @@
 class Timer:
     """Context manager for timing code blocks."""
 
+    @staticmethod
+    def get_eastern_timestamp():
+        """Generate an Eastern Time timestamp string."""
+        return datetime.datetime.now(pytz.timezone('America/New_York')).strftime('%m/%d/%Y %I:%M:%S %p %Z')
+
     def __init__(self, label):
         self.label = label
         self.start_time = None
@@ -321,12 +328,13 @@
         with Timer("Full pipeline"):
             # STEP 1: Fetch data
             with Timer("JSON fetch"):
-                # line 311: Updated to use required name parameter
+                # Use standard logger with static configuration
                 summary_logger = logging.getLogger("summary.pipeline")
-                summary_logger.info("STEP 1: JSON fetch")
+                # Add timestamp directly to log message
+                summary_logger.info(f"STEP 1: JSON fetch: {Timer.get_eastern_timestamp()}")
                 match_ids = await pure_json_fetch_cache.main()
             
             # STEP 2: Process and merge data
             with Timer("Merge and enrichment"):
-                summary_logger.info("STEP 2: Merge and enrichment")
+                summary_logger.info(f"STEP 2: Merge and enrichment: {Timer.get_eastern_timestamp()}")
                 matches = merge_match_data.merge_match_data(match_ids)
